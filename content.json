{"meta":{"title":"简单 - 传递美好","subtitle":"","description":"","author":"ccheng","url":"https://www.if-she.com"},"pages":[{"title":"后端","date":"2020-06-17T08:53:36.256Z","updated":"2020-06-17T08:53:36.256Z","comments":true,"path":"categories/后端/index.html","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/index.html","excerpt":"","text":""},{"title":"前端","date":"2020-06-17T08:53:36.256Z","updated":"2020-06-17T08:53:36.256Z","comments":true,"path":"categories/前端/index.html","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/index.html","excerpt":"","text":""},{"title":"笔记","date":"2020-06-17T08:53:36.256Z","updated":"2020-06-17T08:53:36.256Z","comments":true,"path":"categories/笔记/index.html","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/index.html","excerpt":"","text":""}],"posts":[{"title":"使用frp内网穿透, 用windows远程桌面连接","slug":"trouble/使用frp内网穿透-用windows远程桌面连接","date":"2020-06-10T11:49:06.000Z","updated":"2020-06-17T08:53:36.255Z","comments":true,"path":"trouble/使用frp内网穿透-用windows远程桌面连接/","link":"","permalink":"https://www.if-she.com/trouble/%E4%BD%BF%E7%94%A8frp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-%E7%94%A8windows%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5/","excerpt":"","text":"关于FRPfrp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。关于frp的详细介绍详见github。 配置环境 服务端: Ubuntu18.04 客户端: Windows10 服务器端配置 从github下载服务端https://github.com/fatedier/frp/releases 123wget https://github.com/fatedier/frp/releases/download/v0.33.0/frp_0.33.0_linux_amd64.tar.gzsudo apt install unarunar frp_0.33.0_linux_amd64.tar.gz cd到解压后的文件夹内 编辑服务端配置 vim frps.ini 12345678910111213141516[common]bind_addr = 0.0.0.0# 服务器地址可忽略bind_port = 7000# 服务端端口auto_token = passwd# 服务端密码# web管理面板dashboard_port = 7500# 服务端管理面板端口dashboard_user = admin# 服务端管理面板账号dashboard_pwd = passwd# 服务端管理面板密码 启动服务端 1nohup ./frps -c ./frps.ini 2&gt;&amp;1 &amp; 中文api地址 ：https://github.com/fatedier/frp/blob/master/README_zh.md 此时服务端已经配置完成，在浏览器输入 http://服务器ip地址:7500 输入管理面板即可进入 客户端配置 在此直接下载windows版本 或者在这里 https://github.com/fatedier/frp/releases 找到合适的windows版本 解压后编辑 frpc.ini 123456789101112131415[common]server_addr = 8.210.88.222# 服务器IPserver_port = 7000# 服务端端口auto_token = passwd# 服务端密码[remote]type = tcp# 连接协议local_port = 3389# 本地端口remote_port = 3389# 服务端映射端口 打开命令行切换到解压后的frp文件路径执行 frpc -c frpc.ini 远程连接配置 右键单击 此电脑 图标选择属性 点击 远程设置 勾选 允许远程协助连接这台计算机 和 允许远程连接到此计算机 去掉 仅允许运行使用网络级别身份验证的远程桌面的计算机连接 连接 按下 win + s 输入 mstsc 回车 计算机填写: 服务端IP地址:3389 用户名填写此电脑的登陆账号，按照提示输入密码确认即可","categories":[{"name":"笔记","slug":"笔记","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.if-she.com/tags/linux/"},{"name":"windows","slug":"windows","permalink":"https://www.if-she.com/tags/windows/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/"}]},{"title":"sudo免密配置","slug":"trouble/sudo免密配置","date":"2020-06-02T13:04:58.000Z","updated":"2020-06-17T08:53:36.255Z","comments":true,"path":"trouble/sudo免密配置/","link":"","permalink":"https://www.if-she.com/trouble/sudo%E5%85%8D%E5%AF%86%E9%85%8D%E7%BD%AE/","excerpt":"","text":"切记使用 visudo12# 编辑配置文件sudo visudo /etc/sudoers 修改配置在末尾处加入 1用户名 = (ALL:ALL) NOPASSWD:ALL","categories":[{"name":"笔记","slug":"笔记","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.if-she.com/tags/linux/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://www.if-she.com/tags/ubuntu/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/"}]},{"title":"Ubuntu中文乱码","slug":"trouble/Ubuntu中文乱码","date":"2020-05-25T12:34:49.000Z","updated":"2020-06-17T08:53:36.254Z","comments":true,"path":"trouble/Ubuntu中文乱码/","link":"","permalink":"https://www.if-she.com/trouble/Ubuntu%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/","excerpt":"","text":"解决方案：(先切换到管理员身份，右键复制，粘贴就行了) 1234567891011121314151617apt-get install language-pack-zh-hans(cat &lt;&lt;CONFLANG=\"zh_CN.UTF-8\"LANGUAGE=\"zh_CN:zh:en_US:en\"CONF) &gt;&gt; /etc/environment(cat &lt;&lt;CONFen_US.UTF-8 UTF-8zh_CN.UTF-8 UTF-8zh_CN.GBK GBKzh_CN GB2312CONF) &gt;&gt; /var/lib/locales/supported.d/localapt-get install -y fonts-droid-fallback ttf-wqy-zenhei ttf-wqy-microhei fonts-arphic-ukai fonts-arphic-uming","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.if-she.com/tags/linux/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://www.if-she.com/tags/ubuntu/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"如何在Ubuntu上使用SSR客户端科学上网","slug":"trouble/如何在Ubuntu上使用SSR客户端科学上网","date":"2020-05-21T10:24:24.000Z","updated":"2020-06-17T08:53:36.255Z","comments":true,"path":"trouble/如何在Ubuntu上使用SSR客户端科学上网/","link":"","permalink":"https://www.if-she.com/trouble/%E5%A6%82%E4%BD%95%E5%9C%A8Ubuntu%E4%B8%8A%E4%BD%BF%E7%94%A8SSR%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/","excerpt":"","text":"安装SSR客户端安装命令1234567891011121314# 下载脚本wget http://www.djangoz.com/ssr# 为脚本增加可执行权限sudo chmod +x ssr# 把脚本移动到环境变量路径下sudo mv ssr /usr/local/bin/# 执行安装ssr install# 从[github](https://github.com/shadowsocksr-backup/shadowsocksr)# 克隆了manyuser分支到`/usr/local/share/shadowsocksr`# 安装后配置服务器ssr config 使用ssr help查看帮助 config文件在/usr/local/share/shadowsocksr下，修改完配置应该就可以启动了，没启动就ssr start一下。 终端科学上网 sudo apt-get install privoxy 安装好后行配置，Privoxy的配置文件在/etc/privoxy/config中。 在5.3 forwarded-connect-retries前加上forward-socks5 / 127.0.0.1:1080 . 然后重启下 privoxy，再配置一下终端的环境就可以测试一下穿墙效果了。 1234567# 重启sudo service privoxy restart# 配置代理export http_proxy=\"127.0.0.1:8118\"export https_proxy=\"127.0.0.1:8118\"# 测试效果curl cip.cc","categories":[{"name":"笔记","slug":"笔记","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.if-she.com/tags/linux/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://www.if-she.com/tags/ubuntu/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/"}]},{"title":"Magento常用方法","slug":"trouble/Magento常用方法","date":"2020-05-19T17:19:16.000Z","updated":"2020-06-17T08:53:36.253Z","comments":true,"path":"trouble/Magento常用方法/","link":"","permalink":"https://www.if-she.com/trouble/Magento%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/","excerpt":"","text":"magento2获取后台block12345// 在phtml中&lt;?= $this-&gt;getLayout()-&gt;createBlock('Magento\\Cms\\Block\\Block')-&gt;setBlockId('id')-&gt;toHtml(); ?&gt;// 在后台中## cms: &#123;&#123;block class=\"Magento\\\\Cms\\\\Block\\\\Block\" block_id=\"block_identifier\"&#125;&#125; 获取产品集合123456789101112131415161718192021&lt;?php $objectManager = \\Magento\\Framework\\App\\ObjectManager::getInstance(); $productCollectionFactory = $objectManager-&gt;get('\\Magento\\Catalog\\Model\\ResourceModel\\Product\\CollectionFactory'); $collection = $productCollectionFactory-&gt;create(); $collection-&gt;addAttributeToSelect('*'); // filter current website products $collection-&gt;addWebsiteFilter(); // filter current store products $collection-&gt;addStoreFilter(); // set visibility filter $collection-&gt;setVisibility($objectManager-&gt;get('\\Magento\\Catalog\\Model\\Product\\Visibility')-&gt;getVisibleInSiteIds()); // fetching only 8 products $collection-&gt;setPageSize(8); foreach ($collection as $product): ?&gt; &lt;?= $product-&gt;getName() ?&gt; &lt;!-- 获取图片, 此处的 base 可改为 thumbnail --&gt; &lt;img src=\"&lt;?= $this-&gt;helper('Magento\\Catalog\\Helper\\Image')-&gt;init($product, 'product_base_image' )-&gt;getUrl() ?&gt;\"&gt;&lt;?php endforeach; ?&gt; 获取分类集合12345678910111213141516&lt;?php $objectManager = \\Magento\\Framework\\App\\ObjectManager::getInstance(); $categoryCollectionFactory = $objectManager-&gt;get('\\Magento\\Catalog\\Model\\CategoryFactory'); $collection = $categoryCollectionFactory-&gt;create() -&gt;load(2) -&gt;getChildrenCategories();foreach ($collection as $category): ?&gt; &lt;div class=\"item\"&gt; &lt;span class=\"name\"&gt;&lt;?= $category-&gt;getName() ?&gt;&lt;/span&gt; &lt;/div&gt;&lt;?php endforeach; ?&gt; &lt;!-- 在任意页面获取当前分类 --&gt;&lt;?php $objectManager = \\Magento\\Framework\\App\\ObjectManager::getInstance(); $category = $objectManager-&gt;get('Magento\\Framework\\Registry')-&gt;registry('current_category');//get current product echo $category -&gt;getName();?&gt; 获取库存12345&lt;?php// 您可以使用该方法获得数量或其他值（如最小数量）。echo $_product-&gt;getExtensionAttributes()-&gt;getStockItem()-&gt;getQty();// 或完整的对象数据print_r($_product-&gt;getExtensionAttributes()-&gt;getStockItem()-&gt;getData()); magento1获取指定分类下的商品123456Mage::getModel('catalog/category') -&gt;load('分类id') -&gt;getProductCollection() -&gt;addAttributeToSelect('*') -&gt;addAttributeToFilter('status', 1) -&gt;addAttributeToFilter('visibility', 4) -&gt;setPageSize(8); 获取数据库配置1234$dbname = (string) Mage::getConfig()-&gt;getNode('global/resources/default_setup/connection/dbname');$host = (string) Mage::getConfig()-&gt;getNode('global/resources/default_setup/connection/host');$user = (string) Mage::getConfig()-&gt;getNode('global/resources/default_setup/connection/username');$pwd = (string) Mage::getConfig()-&gt;getNode('global/resources/default_setup/connection/password'); Facebook Purchase事件123456fbq('track', 'Purchase',&#123; value:'&lt;?= number_format($order-&gt;getGrandTotal(),2,\".\",\"\");?&gt;', currency: '&lt;?= Mage::app()-&gt;getStore()-&gt;getCurrentCurrencyCode(); ?&gt;', content_ids: '&lt;?= $product_sku; ?&gt;', content_type: 'product',&#125;); 创建后台用户123456789set foreign_key_checks = 0;truncate admin_user;insert into admin_user value(1, 'c', 'ccheng', '1434389213@qq.com', 'admin', '18d3eb456e992e7ed126ad9fa03215c2:i8IrEDA41LGVj7Pmrjg5KwPLlotwV3kr', '2019-07-05 07:01:04', '2019-07-05 07:01:04', '2019-07-05 07:24:35', 4, 0, 1, 'a:1:&#123;s:11:\"configState\";a:7:&#123;s:12:\"dev_restrict\";s:1:\"0\";s:9:\"dev_debug\";s:1:\"1\";s:12:\"dev_template\";s:1:\"0\";s:20:\"dev_translate_inline\";s:1:\"0\";s:7:\"dev_log\";s:1:\"0\";s:6:\"dev_js\";s:1:\"0\";s:7:\"dev_css\";s:1:\"0\";&#125;&#125;', null, null);# 管理员账号# admin# 管理员密码# admin123# 18d3eb456e992e7ed126ad9fa03215c2:i8IrEDA41LGVj7Pmrjg5KwPLlotwV3kr 测试清除冗余数据123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214SET FOREIGN_KEY_CHECKS=0;TRUNCATE `catalogsearch_fulltext`;TRUNCATE `catalogrule_product_price`;TRUNCATE `core_url_rewrite`;TRUNCATE `catalogrule_product`;ALTER TABLE `catalogsearch_fulltext` AUTO_INCREMENT=1;ALTER TABLE `catalogrule_product_price` AUTO_INCREMENT=1;ALTER TABLE `core_url_rewrite` AUTO_INCREMENT=1;ALTER TABLE `catalogrule_product` AUTO_INCREMENT=1;-- 清空所有订单TRUNCATE `sales_flat_order`;TRUNCATE `sales_flat_order_address`;TRUNCATE `sales_flat_order_grid`;TRUNCATE `sales_flat_order_item`;TRUNCATE `sales_flat_order_status_history`;TRUNCATE `sales_flat_quote`;TRUNCATE `sales_flat_quote_address`;TRUNCATE `sales_flat_quote_address_item`;TRUNCATE `sales_flat_quote_item`;TRUNCATE `sales_flat_quote_item_option`;TRUNCATE `sales_flat_order_payment`;TRUNCATE `sales_flat_quote_payment`;TRUNCATE `sales_flat_shipment`;TRUNCATE `sales_flat_shipment_item`;TRUNCATE `sales_flat_shipment_grid`;TRUNCATE `sales_flat_invoice`;TRUNCATE `sales_flat_invoice_grid`;TRUNCATE `sales_flat_invoice_item`;TRUNCATE `sendfriend_log`;TRUNCATE `tag`;TRUNCATE `tag_relation`;TRUNCATE `tag_summary`;TRUNCATE `wishlist`;TRUNCATE `log_quote`;TRUNCATE `report_event`;TRUNCATE `sales_flat_quote_shipping_rate`;TRUNCATE `sales_flat_shipment_comment`;TRUNCATE `sales_flat_shipment_track`;ALTER TABLE `sales_flat_quote_shipping_rate` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_order` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_order_address` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_order_grid` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_order_item` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_order_status_history` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_quote` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_quote_address` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_quote_address_item` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_quote_item` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_quote_item_option` AUTO_INCREMENT=1;ALTER TABLE `sendfriend_log` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_order_payment` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_quote_payment` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_shipment` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_shipment_item` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_invoice` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_invoice_grid` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_invoice_item` AUTO_INCREMENT=1;ALTER TABLE `sales_flat_shipment_grid` AUTO_INCREMENT=1;ALTER TABLE `tag` AUTO_INCREMENT=1;ALTER TABLE `tag_relation` AUTO_INCREMENT=1;ALTER TABLE `tag_summary` AUTO_INCREMENT=1;ALTER TABLE `wishlist` AUTO_INCREMENT=1;ALTER TABLE `log_quote` AUTO_INCREMENT=1;ALTER TABLE `report_event` AUTO_INCREMENT=1;-- 清空所有用户TRUNCATE `customer_address_entity`;TRUNCATE `customer_address_entity_datetime`;TRUNCATE `customer_address_entity_decimal`;TRUNCATE `customer_address_entity_int`;TRUNCATE `customer_address_entity_text`;TRUNCATE `customer_address_entity_varchar`;TRUNCATE `customer_entity`;TRUNCATE `customer_entity_datetime`;TRUNCATE `customer_entity_decimal`;TRUNCATE `customer_entity_int`;TRUNCATE `customer_entity_text`;TRUNCATE `customer_entity_varchar`;TRUNCATE `log_customer`;TRUNCATE `log_visitor`;TRUNCATE `log_visitor_info`;ALTER TABLE `customer_address_entity` AUTO_INCREMENT=1;ALTER TABLE `customer_address_entity_datetime` AUTO_INCREMENT=1;ALTER TABLE `customer_address_entity_decimal` AUTO_INCREMENT=1;ALTER TABLE `customer_address_entity_int` AUTO_INCREMENT=1;ALTER TABLE `customer_address_entity_text` AUTO_INCREMENT=1;ALTER TABLE `customer_address_entity_varchar` AUTO_INCREMENT=1;ALTER TABLE `customer_entity` AUTO_INCREMENT=1;ALTER TABLE `customer_entity_datetime` AUTO_INCREMENT=1;ALTER TABLE `customer_entity_decimal` AUTO_INCREMENT=1;ALTER TABLE `customer_entity_int` AUTO_INCREMENT=1;ALTER TABLE `customer_entity_text` AUTO_INCREMENT=1;ALTER TABLE `customer_entity_varchar` AUTO_INCREMENT=1;ALTER TABLE `log_customer` AUTO_INCREMENT=1;ALTER TABLE `log_visitor` AUTO_INCREMENT=1;ALTER TABLE `log_visitor_info` AUTO_INCREMENT=1;-- 清空日志:truncate dataflow_batch_export;truncate dataflow_batch_import;truncate log_customer;truncate log_quote;truncate log_summary;truncate log_summary_type;truncate log_url;truncate log_url_info;truncate log_visitor;truncate log_visitor_info;truncate log_visitor_online;truncate report_viewed_product_index;truncate report_compared_product_index;truncate report_event;-- 清空产品：TRUNCATE TABLE `catalog_product_bundle_option`;TRUNCATE TABLE `catalog_product_bundle_option_value`;TRUNCATE TABLE `catalog_product_bundle_selection`;TRUNCATE TABLE `catalog_product_entity_datetime`;TRUNCATE TABLE `catalog_product_entity_decimal`;TRUNCATE TABLE `catalog_product_entity_gallery`;TRUNCATE TABLE `catalog_product_entity_int`;TRUNCATE TABLE `catalog_product_entity_media_gallery`;TRUNCATE TABLE `catalog_product_entity_media_gallery_value`;TRUNCATE TABLE `catalog_product_entity_text`;TRUNCATE TABLE `catalog_product_entity_tier_price`;TRUNCATE TABLE `catalog_product_entity_varchar`;TRUNCATE TABLE `catalog_product_link`;TRUNCATE TABLE `catalog_product_link_attribute`;TRUNCATE TABLE `catalog_product_link_attribute_decimal`;TRUNCATE TABLE `catalog_product_link_attribute_int`;TRUNCATE TABLE `catalog_product_link_attribute_varchar`;TRUNCATE TABLE `catalog_product_link_type`;TRUNCATE TABLE `catalog_product_option`;TRUNCATE TABLE `catalog_product_option_price`;TRUNCATE TABLE `catalog_product_option_title`;TRUNCATE TABLE `catalog_product_option_type_price`;TRUNCATE TABLE `catalog_product_option_type_title`;TRUNCATE TABLE `catalog_product_option_type_value`;TRUNCATE TABLE `catalog_product_super_attribute`;TRUNCATE TABLE `catalog_product_super_attribute_label`;TRUNCATE TABLE `catalog_product_super_attribute_pricing`;TRUNCATE TABLE `catalog_product_super_link`;TRUNCATE TABLE `catalog_product_enabled_index`;TRUNCATE TABLE `catalog_product_website`;TRUNCATE TABLE `catalog_product_entity`;TRUNCATE TABLE `cataloginventory_stock`;TRUNCATE TABLE `cataloginventory_stock_item`;TRUNCATE TABLE `cataloginventory_stock_status`;TRUNCATE `catalogsearch_fulltext`;TRUNCATE `catalogsearch_query`;TRUNCATE `catalogsearch_result`;truncate sales_bestsellers_aggregated_daily;truncate sales_bestsellers_aggregated_monthly;truncate sales_bestsellers_aggregated_yearly;ALTER TABLE `catalog_product_bundle_option` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_bundle_option_value` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_bundle_selection` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_entity_datetime` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_entity_decimal` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_entity_gallery` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_entity_int` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_entity_media_gallery` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_entity_media_gallery_value` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_entity_text` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_entity_tier_price` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_entity_varchar` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_link` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_link_attribute` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_link_attribute_decimal` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_link_attribute_int` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_link_attribute_varchar` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_link_type` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_option` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_option_price` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_option_title` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_option_type_price` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_option_type_title` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_option_type_value` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_super_attribute` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_super_attribute_label` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_super_attribute_pricing` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_super_link` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_enabled_index` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_website` AUTO_INCREMENT=1;ALTER TABLE `catalog_product_entity` AUTO_INCREMENT=1;ALTER TABLE `cataloginventory_stock` AUTO_INCREMENT=1;ALTER TABLE `cataloginventory_stock_item` AUTO_INCREMENT=1;ALTER TABLE `cataloginventory_stock_status` AUTO_INCREMENT=1;insert into `catalog_product_link_type`(`link_type_id`,`code`) values (1,'relation'),(2,'bundle'),(3,'super'),(4,'up_sell'),(5,'cross_sell');insert into `catalog_product_link_attribute`(`product_link_attribute_id`,`link_type_id`,`product_link_attribute_code`,`data_type`) values (1,2,'qty','decimal'),(2,1,'position','int'),(3,4,'position','int'),(4,5,'position','int'),(6,1,'qty','decimal'),(7,3,'position','int'),(8,3,'qty','decimal');insert into `cataloginventory_stock`(`stock_id`,`stock_name`) values (1,'Default');-- 重置所有的 ID countersTRUNCATE `eav_entity_store`;ALTER TABLE `eav_entity_store` AUTO_INCREMENT=1;SET FOREIGN_KEY_CHECKS=1;truncate oc_block;truncate oc_block_data;truncate oc_position;truncate sale_tmp_data;truncate smtppro_email_log;","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"php","slug":"php","permalink":"https://www.if-she.com/tags/php/"},{"name":"magento","slug":"magento","permalink":"https://www.if-she.com/tags/magento/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"Nginx常用配置","slug":"trouble/Nginx常用配置","date":"2020-05-19T17:14:13.000Z","updated":"2020-06-17T08:53:36.253Z","comments":true,"path":"trouble/Nginx常用配置/","link":"","permalink":"https://www.if-she.com/trouble/Nginx%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/","excerpt":"","text":"重写index.php123456789server &#123; listen 80; server_name domain; root /var/www/myProject; location / &#123; # rewrite index.php try_files $uri /index.php$request_uri; &#125;&#125; 启用https123456789101112131415161718192021222324252627server &#123; listen 80; listen 443 ssl http2; server_name domain; root /var/www/myProject; # http jump https if ($scheme = http) &#123; return 301 https://$host$request_uri; &#125; ssl on; ssl_certificate /var/www/ssl/.crt; ssl_certificate_key /var/www/ssl/.key; ssl_session_cache shared:SSL:1m; ssl_session_timeout 10m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; location / &#123; # rewrite index.php try_files $uri /index.php$request_uri; &#125; include enable-php7.2.conf; # enable php7.2&#125; 代理转发配置1234567891011121314underscores_in_headers on;server &#123; listen # port; server_name # domain; # proxy config location / &#123; proxy_pass # proxy address; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_next_upstream http_502 http_504 error timeout invalid_header; &#125;&#125; 负载均衡配置12345678910111213141516171819202122232425262728293031323334upstream name &#123; service 反向服务地址,加端口 weight 权重 max_fails 失败多少次 认为主机已挂掉则，踢出 fail_timeout 踢出后重新探测时间 backup 备用服务,直接写upstream后的标识符 max_conns 允许最大连接数 slow_start 当节点恢复，不立即加入&#125; # 负载均衡算法# ip_hash : 基于Hash 计算,每个ip访问固定的stream# 应用场景：保持session 一至性# url_hash: (第三方)# 应用场景：静态资源缓存,节约存储，加快速度# least_conn 最少链接# least_time 最小的响应时间,计算节点平均响应时间，然后取响应最快的那个，分配更高权重。 # 例子:upstream test_stream &#123; ip_hash; service 127.0.0.1:8080;&#125;server &#123; listen 80; server_name test.com; location / &#123; proxy_pass http://test_stream; &#125;&#125; # 了解更多# 配置相关: https://blog.csdn.net/caijunsen/article/details/83002219# 日志相关: https://blog.csdn.net/biubiuli/article/details/79481882 启用php7.2 需要先安装php-fpm 12345678location ~ [^/]\\.php(/|$) &#123; fastcgi_pass unix:/var/run/php/php7.2-fpm.sock; fastcgi_index index.php; fastcgi_split_path_info ^(.+\\.php)(.*)$; fastcgi_param PATH_INFO $fastcgi_path_info; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params;&#125; 其他配置123456789101112131415161718192021222324252627282930# gzip cachegzip on;gzip_vary on;gzip_proxied any;gzip_comp_level 6;gzip_buffers 16 8k;gzip_http_version 1.1;gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; # browser cachelocation ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$ &#123; expires 30d;&#125; location ~ .*\\.(js|css)?$ &#123; expires 12h;&#125; location ~ /\\. &#123; deny all;&#125;# location /download &#123;# limit_rate 1m;// Download speed limit# limit_rate_after 30m;// Download speed limit for &gt;30M# &#125; # error_page 404 /var/www/404.html;access_log /var/www/nginx_access.log;error_log /var/www/nginx_error.log;","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://www.if-she.com/tags/nginx/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"nginx代理Django项目","slug":"trouble/nginx代理Django项目","date":"2020-05-19T16:59:30.000Z","updated":"2020-06-17T08:53:36.255Z","comments":true,"path":"trouble/nginx代理Django项目/","link":"","permalink":"https://www.if-she.com/trouble/nginx%E4%BB%A3%E7%90%86Django%E9%A1%B9%E7%9B%AE/","excerpt":"","text":"目标 ：浏览器 www.mydjango.test 进入django项目主页 1、概念 Django项目(Web应用) Web服务 nginx ：高并发处理的好 Apache：稳定 LAMP : Linux、Apache、MySQL、Python/Php/Perl LNMP : Linux、Nginx、MySQL、Python/Php/Perl uwsgi是Web服务器与Web框架之间一种简单而通用的接口 2、项目部署 部署环境准备 确保Django项目可以运行 安装nginx(用apt-get安装) 安装 ：sudo apt-get install nginx 启动 ：sudo /etc/init.d/nginx restart 验证 ：浏览器,输入127.0.0.1-&gt;Welcome to nginx（80端口） 安装uwsgi(用pip3安装) 安装 ：sudo pip3 install uwsgi 验证 ：uwsgi --http :9999 --chdir /home/godyang/work/pf/ --module pf.wsgi 3、项目部署步骤1.配置uwsgi(配置文件) 在项目目录(manage.py所在路径)中新建uwsgi启动文件 ：uwsgi.ini vi uwsgi.ini配置文件内容如下： 直接copy123456789101112131415161718192021[uwsgi]#使用nginx连接时使用，Django程序所在服务器地址socket=10.211.55.2:8001 #改为服务器内网IP，本地测试为127.0.0.1#直接做web服务器使用，Django程序所在服务器地址#http=10.211.55.2:8001#项目目录 （后端项目目录）chdir=/Users/delron/Desktop/meiduo/meiduo_mall#项目中wsgi.py文件的目录，相对于项目目录wsgi-file=meiduo_mall/wsgi.py# 进程数processes=4# 线程数threads=2# uwsgi服务器的角色master=True# 存放进程编号的文件pidfile=uwsgi.pid# 日志文件，因为uwsgi可以脱离终端在后台运行，日志看不见。我们以前的runserver是依赖终端的daemonize=uwsgi.log# 指定依赖的虚拟环境virtualenv=/Users/delron/.virtualenv/meiduo 2. 配置nginx(配置文件)（在nginx哪个配置文件里配置都可以，nginx.conf或者sites-enabled/default或者sites-enabled/新建配置文件）123sudo -icd /etc/nginx/sites-enabled/vi projectNginx.conf 1234567891011121314151617server&#123; # 监听本项目端口,浏览器输入的端口 listen 80; server_name www.zy.com;（域名或者服务器外网IP或者用逗号隔开都写） charset utf-8; # 收集静态文件的路径 location /static&#123; alias /home/godyang/work/pf/static; &#125; # 和uwsgi通信端口 和项目通信文件 location /&#123; include uwsgi_params; uwsgi_pass 172.17.138.117:8000;（服务器内网IP） &#125;&#125; vi /etc/nginx/sites-enabled/default listen 80 default_server; 把 80 端口改为其他端口,上下都改变，然后允许端口号 在settings中 ALLOWED_HOSTS = [‘*’] 重启nginx服务 sudo /etc/init.d/nginx restart 3. 收集静态文件 在settings.py中添加路径(STATIC_ROOT) STATIC_ROOT = ‘/home/tarena/project/fruitday/static/‘ 收集静态文件 python3 manage.py collectstatic 4. 添加本地DNS解析 sudo -i vi /etc/hosts 添加如下内容 127.0.0.1 www.mydjango.test 重启网络服务 /etc/init.d/networking restart 5. uwsgi启动项目 切换到项目目录 cd /home/tarena/project/fruitday 利用uwsgi启动项目 uwsgi –ini uwsgi.ini","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://www.if-she.com/tags/nginx/"},{"name":"python","slug":"python","permalink":"https://www.if-she.com/tags/python/"},{"name":"django","slug":"django","permalink":"https://www.if-she.com/tags/django/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"网页嵌入谷歌翻译js插件","slug":"trouble/网页嵌入谷歌翻译js插件","date":"2020-05-19T16:58:19.000Z","updated":"2020-06-17T08:53:36.256Z","comments":true,"path":"trouble/网页嵌入谷歌翻译js插件/","link":"","permalink":"https://www.if-she.com/trouble/%E7%BD%91%E9%A1%B5%E5%B5%8C%E5%85%A5%E8%B0%B7%E6%AD%8C%E7%BF%BB%E8%AF%91js%E6%8F%92%E4%BB%B6/","excerpt":"","text":"123456789101112131415161718&lt;div id='google_translate_element' style='position: fixed; bottom: 0px; right: 0px;z-index: 100'&gt;&lt;/div&gt;&lt;script&gt; function googleTranslateElementInit() &#123; new google.translate.TranslateElement( &#123; // pageLanguage: 'zh-CN', // 需要翻译的语言，比如你只需要翻译成越南和英语，这里就只写en,vi includedLanguages: 'en,zh-CN,hr,cs,da,nl,fr,de,el,iw,hu,ga,it,ja,ko,pt,ro,ru,sr,es,th,vi', layout: google.translate.TranslateElement.InlineLayout.SIMPLE, // 自动显示翻译横幅，就是翻译后顶部出现的那个 autoDisplay: true, // 还有些其他参数，由于原插件不再维护，找不到详细api了，将就了，实在不行直接上dom操作 &#125;, 'google_translate_element' // 存放翻译组件元素的id ); &#125;&lt;/script&gt;&lt;script src=\"https://translate.google.cn/translate_a/element.js?cb=googleTranslateElementInit\"&gt;&lt;/script&gt;","categories":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"js","slug":"js","permalink":"https://www.if-she.com/tags/js/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}]},{"title":"header头部汇总","slug":"trouble/header头部汇总","date":"2020-05-19T16:56:42.000Z","updated":"2020-06-17T08:53:36.254Z","comments":true,"path":"trouble/header头部汇总/","link":"","permalink":"https://www.if-she.com/trouble/header%E5%A4%B4%E9%83%A8%E6%B1%87%E6%80%BB/","excerpt":"","text":"header() 函数向客户端发送原始的 HTTP 报头。 认识到一点很重要，即必须在任何实际的输出被发送之前调用 header() 函数（在 PHP 4 以及更高的版本中，您可以使用输出缓存来解决此问题）： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354header('HTTP/1.1 200 OK'); // ok 正常访问header('HTTP/1.1 404 Not Found'); //通知浏览器 页面不存在header('HTTP/1.1 301 Moved Permanently'); //设置地址被永久的重定向 301header('Location: http://www.ithhc.cn/'); //跳转到一个新的地址header('Refresh: 10; url=http://www.ithhc.cn/'); //延迟转向 也就是隔几秒跳转header('X-Powered-By: PHP/6.0.0'); //修改 X-Powered-By信息header('Content-language: en'); //文档语言header('Content-Length: 1234'); //设置内容长度header('Last-Modified: '. gmdate('D, d M Y H:i:s', $time).' GMT'); //告诉浏览器最后一次修改时间header('HTTP/1.1 304 Not Modified'); //告诉浏览器文档内容没有发生改变###内容类型###header('Content-Type: text/html; charset=utf-8'); //网页编码header('Content-Type: text/plain'); //纯文本格式header('Content-Type: image/jpeg'); //JPG、JPEGheader('Content-Type: application/zip'); // ZIP文件header('Content-Type: application/pdf'); // PDF文件header('Content-Type: audio/mpeg'); // 音频文件header('Content-type: text/css'); //css文件header('Content-type: text/javascript'); //js文件header('Content-type: application/json'); //jsonheader('Content-type: application/pdf'); //pdfheader('Content-type: text/xml'); //xmlheader('Content-Type: application/x-shockw**e-flash'); //Flash动画#########声明一个下载的文件###header('Content-Type: application/octet-stream');header('Content-Disposition: attachment; filename=\"ITblog.zip\"');header('Content-Transfer-Encoding: binary');readfile('test.zip');#########对当前文档禁用缓存###header('Cache-Control: no-cache, no-store, max-age=0, must-revalidate');header('Expires: Mon, 26 Jul 1997 05:00:00 GMT');#########显示一个需要验证的登陆对话框###header('HTTP/1.1 401 Unauthorized');header('WWW-Authenticate: Basic realm=\"Top Secret\"');#########声明一个需要下载的xls文件###header('Content-Disposition: attachment; filename=ithhc.xlsx');header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');header('Content-Length: '.filesize('./test.xls')); header('Content-Transfer-Encoding: binary'); header('Cache-Control: must-revalidate'); header('Pragma: public'); readfile('./test.xls'); ######","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://www.if-she.com/tags/nginx/"},{"name":"php","slug":"php","permalink":"https://www.if-she.com/tags/php/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"HTTP常见响应码","slug":"trouble/HTTP常见响应码","date":"2020-05-19T16:53:37.000Z","updated":"2020-06-17T08:53:36.253Z","comments":true,"path":"trouble/HTTP常见响应码/","link":"","permalink":"https://www.if-she.com/trouble/HTTP%E5%B8%B8%E8%A7%81%E5%93%8D%E5%BA%94%E7%A0%81/","excerpt":"","text":"1xx:信息 100 Continue 服务器仅接收到部分请求，但是一旦服务器并没有拒绝该请求，客户端应该继续发送其余的请求。 101 Switching Protocols 服务器转换协议：服务器将遵从客户的请求转换到另外一种协议。 2xx:成功 200 OK 请求成功（其后是对GET和POST请求的应答文档） 201 Created 请求被创建完成，同时新的资源被创建。 202 Accepted 供处理的请求已被接受，但是处理未完成。 203 Non-authoritative Information 文档已经正常地返回，但一些应答头可能不正确，因为使用的是文档的拷贝。 204 No Content 没有新文档。浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而Servlet可以确定用户文档足够新，这个状态代码是很有用的。 205 Reset Content 没有新文档。但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容。 206 Partial Content 客户发送了一个带有Range头的GET请求，服务器完成了它。 3xx:重定向 300 Multiple Choices 多重选择。链接列表。用户可以选择某链接到达目的地。最多允许五个地址。 301 Moved Permanently 所请求的页面已经转移至新的url。 302 Moved Temporarily 所请求的页面已经临时转移至新的url。 303 See Other 所请求的页面可在别的url下被找到。 304 Not Modified 未按预期修改文档。客户端有缓冲的文档并发出了一个条件性的请求（一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档）。服务器告诉客户，原来缓冲的文档还可以继续使用。 305 Use Proxy 客户请求的文档应该通过Location头所指明的代理服务器提取。 306 Unused 此代码被用于前一版本。目前已不再使用，但是代码依然被保留。 307 Temporary Redirect 被请求的页面已经临时移至新的url。 4xx:客户端错误 400 Bad Request 服务器未能理解请求。 401 Unauthorized 被请求的页面需要用户名和密码。 401.1 登录失败。 401.2 服务器配置导致登录失败。 401.3 由于 ACL 对资源的限制而未获得授权。 401.4 筛选器授权失败。 401.5 ISAPI/CGI 应用程序授权失败。 401.7 访问被 Web 服务器上的 URL 授权策略拒绝。这个错误代码为 IIS 6.0 所专用。 402 Payment Required 此代码尚无法使用。 403 Forbidden 对被请求页面的访问被禁止。 403.1 执行访问被禁止。 403.2 读访问被禁止。 403.3 写访问被禁止。 403.4 要求 SSL。 403.5 要求 SSL 128。 403.6 IP 地址被拒绝。 403.7 要求客户端证书。 403.8 站点访问被拒绝。 403.9 用户数过多。 403.10 配置无效。 403.11 密码更改。 403.12 拒绝访问映射表。 403.13 客户端证书被吊销。 403.14 拒绝目录列表。 403.15 超出客户端访问许可。 403.16 客户端证书不受信任或无效。 403.17 客户端证书已过期或尚未生效。 403.18 在当前的应用程序池中不能执行所请求的 URL。这个错误代码为 IIS 6.0 所专用。 403.19 不能为这个应用程序池中的客户端执行 CGI。这个错误代码为 IIS 6.0 所专用。 403.20 Passport 登录失败。这个错误代码为 IIS 6.0 所专用。 404 Not Found 服务器无法找到被请求的页面。 404.0 没有找到文件或目录。 404.1 无法在所请求的端口上访问 Web 站点。 404.2 Web 服务扩展锁定策略阻止本请求。 404.3 MIME 映射策略阻止本请求。 405 Method Not Allowed 请求中指定的方法不被允许。 406 Not Acceptable 服务器生成的响应无法被客户端所接受。 407 Proxy Authentication Required 用户必须首先使用代理服务器进行验证，这样请求才会被处理。 408 Request Timeout 请求超出了服务器的等待时间。 409 Conflict 由于冲突，请求无法被完成。 410 Gone 被请求的页面不可用。 411 Length Required “Content-Length” 未被定义。如果无此内容，服务器不会接受请求。 412 Precondition Failed 请求中的前提条件被服务器评估为失败。 413 Request Entity Too Large 由于所请求的实体的太大，服务器不会接受请求。 414 Request-url Too Long 由于url太长，服务器不会接受请求。当post请求被转换为带有很长的查询信息的get请求时，就会发生这种情况。 415 Unsupported Media Type 由于媒介类型不被支持，服务器不会接受请求。 416 Requested Range Not Satisfiable 服务器不能满足客户在请求中指定的Range头。 417 Expectation Failed 执行失败。 423 锁定的错误。 5xx:服务器错误 500 Internal Server Error 请求未完成。服务器遇到不可预知的情况。 500.12 应用程序正忙于在 Web 服务器上重新启动。 500.13 Web 服务器太忙。 500.15 不允许直接请求 Global.asa。 500.16 UNC 授权凭据不正确。这个错误代码为 IIS 6.0 所专用。 500.18 URL 授权存储不能打开。这个错误代码为 IIS 6.0 所专用。 500.100 内部 ASP 错误。 501 Not Implemented 请求未完成。服务器不支持所请求的功能。 502 Bad Gateway 请求未完成。服务器从上游服务器收到一个无效的响应。 502.1 CGI 应用程序超时。 · 502.2 CGI 应用程序出错。 503 Service Unavailable 请求未完成。服务器临时过载或当机。 504 Gateway Timeout 网关超时。 505 HTTP Version Not Supported 服务器不支持请求中指明的HTTP协议版本","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://www.if-she.com/tags/nginx/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"PHP获取文件mime类型的方法","slug":"trouble/PHP获取文件mime类型的方法","date":"2020-05-19T16:51:12.000Z","updated":"2020-06-17T08:53:36.254Z","comments":true,"path":"trouble/PHP获取文件mime类型的方法/","link":"","permalink":"https://www.if-she.com/trouble/PHP%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6mime%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%96%B9%E6%B3%95/","excerpt":"","text":"mime_content_type()函数判断获取mime类型mime_content_type返回指定文件的MIME类型，用法：echomime_content_type(‘php.gif’) .“\\n”;echomime_content_type(‘test.php’);输出：image/giftext/plain但是php 5.3.0已经将该函数废弃。如果仍想使用此函数，那么可以对php进行配置启用magic_mime扩展。 php Fileinfo 获取文件MIME类型(finfo_open)PHP官方推荐mime_content_type()的替代函数是Fileinfo函数。PHP5.3.0+已经默认支持Fileinfo函数(fileinfosupport-enabled)，不必进行任何配置即可使用finfo_open()判断获取文件MIME类型。用法：$finfo = finfo_open(FILEINFO_MIME);$mimetype = finfo_file($finfo, $filename);finfo_close($finfo); image_type_to_mime_type()获取图片MIME类型注意：需要在php.ini中配置打开php_mbstring.dll(Windows需要)和extension=php_exif.dll。 php上传文件获取MIME类型发送多种数据的多部分对象集合发送邮件时,我们可以在邮件里写入文字并添加多份附件,这是因为采用了MIME(Multipurpose Internet Mail Extensions多用途因特网邮件扩展)机制,它允许邮件处理文本\\图片\\视频等多种不同类型的数据.例如,图片等二进制数据以ascii码字符串编码的方式指明,就利用MIME来描述标记数据类型.而在MIME扩展中会使用一种称为多部分对象集合(Multipart)的方法,来容纳多份不同类型的数据. 相应的,HTTP协议中也采纳了多部分对象集合,发送的一份报文主体内可含有多类型实体.通常在图片或者文本文件等上传时使用. 多部分对象集合包含的对象如下: multipart/form-data 在表单上传文件时使用 multipart/byteranges 状态码206(部分内容)响应报文包含了多个范围的内容时使用.","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"php","slug":"php","permalink":"https://www.if-she.com/tags/php/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"js社交分享","slug":"trouble/js社交分享","date":"2020-05-19T16:48:39.000Z","updated":"2020-06-17T08:53:36.255Z","comments":true,"path":"trouble/js社交分享/","link":"","permalink":"https://www.if-she.com/trouble/js%E7%A4%BE%E4%BA%A4%E5%88%86%E4%BA%AB/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344/** * 在新窗口中打开分享 * @param string type 分享类型 * qzone * weibo * tqq * renren * douban * facebook * twitter * linkedin * weixin * qq * @param string [content] 长介绍，只有qzone、renren、douban、linkedin支持 * @param string [pic] 图片的链接，只有qzone、weibo、douban、facebook、qq支持 * @param string [title] 短介绍, 默认获取当前页面 title标签的内容 * @param string [url] 分享的链接, 默认使用 location.href */function share(type, content = '', pic = '', title = '', url = '') &#123; url = encodeURIComponent(url || location.href); title = encodeURIComponent(title || document.getElementsByTagName('title')[0].innerText); if (!content &amp;&amp; document.querySelector('[name=\"description\" ]')) content = document.querySelector('[name=\"description\" ]').getAttribute('content'); content = encodeURIComponent(content); if (!pic &amp;&amp; document.querySelector('link[rel^=\"icon\"]')) pic = document.querySelector('link[rel^=\"icon\"]').getAttribute('href'); pic = encodeURIComponent(pic); let share_type = &#123; qzone: `http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?url=$&#123;url&#125;&amp;title=$&#123;title&#125;&amp;pics=$&#123;pic&#125;&amp;summary=$&#123;content&#125;`, weibo: `http://service.weibo.com/share/share.php?url=$&#123;url&#125;&amp;title=$&#123;title&#125;&amp;pic=$&#123;pic&#125;&amp;searchPic=false`, tqq: `http://share.v.t.qq.com/index.php?c=share&amp;a=index&amp;url=$&#123;url&#125;&amp;title=$&#123;title&#125;&amp;appkey=801cf76d3cfc44ada52ec13114e84a96`, renren: `http://widget.renren.com/dialog/share?resourceUrl=$&#123;url&#125;&amp;srcUrl=$&#123;url&#125;&amp;title=$&#123;title&#125;&amp;description=$&#123;content&#125;`, douban: `http://www.douban.com/share/service?href=$&#123;url&#125;&amp;name=$&#123;title&#125;&amp;text=$&#123;content&#125;&amp;image=$&#123;pic&#125;`, facebook: `https://www.facebook.com/sharer/sharer.php?u=$&#123;url&#125;&amp;t=$&#123;title&#125;&amp;pic=$&#123;pic&#125;`, twitter: `https://twitter.com/intent/tweet?text=$&#123;title&#125;&amp;url=$&#123;url&#125;`, linkedin: `https://www.linkedin.com/shareArticle?title=$&#123;title&#125;&amp;summary=$&#123;content&#125;&amp;mini=true&amp;url=$&#123;url&#125;&amp;ro=true`, weixin: `http://qr.topscan.com/api.php?text=$&#123;url&#125;&amp;logo=$&#123;pic&#125;`, qq: `http://connect.qq.com/widget/shareqq/index.html?url=$&#123;url&#125;&amp;title=$&#123;title&#125;&amp;summary=$&#123;content&#125;&amp;pics=$&#123;pic&#125;`, &#125;; let share_url = share_type[type]; if (typeof share_url == 'undefined') &#123; alert('不支持以此格式分享');return false; &#125; window.open(share_type[type], 'Share it with your friends', `height=600,width=800,top=$&#123;screen.availHeight / 5&#125;,left=$&#123;screen.availWidth / 4&#125;,`); return true;&#125; facebook12345678910111213141516171819202122232425262728293031323334353637383940414243&lt;!-- 在head部分添加 --&gt;&lt;meta property=\"og:url\" content=\"https://www.your-domain.com/your-page.html\" /&gt;&lt;meta property=\"og:type\" content=\"website\" /&gt;&lt;meta property=\"og:title\" content=\"Your Website Title\" /&gt;&lt;meta property=\"og:description\" content=\"Your description\" /&gt;&lt;meta property=\"og:image\" content=\"https://www.your-domain.com/path/image.jpg\" /&gt; &lt;div id=\"fb-root\"&gt;&lt;/div&gt;&lt;script&gt;(function(d, s, id) &#123;var js, fjs = d.getElementsByTagName(s)[0];if (d.getElementById(id)) return;js = d.createElement(s); js.id = id;//下面填入一个你的app id，如果还没，请在fb开发者平台注册一个js.src = \"//connect.facebook.net/en_US/sdk.js#xfbml=1&amp;version=v2.8&amp;appId=&#123;your app id&#125;\"; fjs.parentNode.insertBefore(js, fjs);&#125;(document, 'script', 'facebook-jssdk'));&lt;/script&gt; &lt;!-- Facebook预定义的分享按钮 --&gt;&lt;!-- data-layout可选box_count、button_count 或 button --&gt;&lt;!-- data-size可选large 和 small --&gt;&lt;div class=\"fb-share-button\" data-href=\"分享的链接\" data-layout=\"button_count\" data-size=\"small\"&gt;&lt;/div&gt; &lt;script&gt;// 自定义触发事件进行分享示例var shareToFbBtn = document.getElementById('fb-btn');shareToFbBtn.onclick = function()&#123; FB.ui(&#123; method: 'share', href: \"htttp://www.eaxmple.com/share.html\" //这里换成你的网址 &#125;, function(response)&#123; //分享回调 &#125;)&#125;&lt;/script&gt; &lt;!-- 官方文档 --&gt;&lt;!-- https://developers.facebook.com/docs/plugins/share-button --&gt;","categories":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"js","slug":"js","permalink":"https://www.if-she.com/tags/js/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}]},{"title":"PHP在linux下检测可用端口","slug":"trouble/PHP在linux下检测可用端口","date":"2020-05-19T16:41:06.000Z","updated":"2020-06-17T08:53:36.254Z","comments":true,"path":"trouble/PHP在linux下检测可用端口/","link":"","permalink":"https://www.if-she.com/trouble/PHP%E5%9C%A8linux%E4%B8%8B%E6%A3%80%E6%B5%8B%E5%8F%AF%E7%94%A8%E7%AB%AF%E5%8F%A3/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132/** * 获取此刻设备上的已占用端口 * @return array 已占用端口列表 */function getUsedPort () &#123; $port_arr = []; exec('netstat -tan', $result, $err); if (!$err) &#123; foreach ($result as $i) &#123; $i = array_filter(explode(' ', str_replace(' ', ' ', $i))); $p = ltrim(strrchr(next($i), ':'), ':'); if ($p) $port_arr[] = (int)$p; &#125; &#125; else &#123; return range(1, 65535); &#125; return $port_arr;&#125; /** * 获取一个可用端口 * @return int 返回一个此刻设备上未被使用的端口, 返回0表示暂无可用端口 */function getValidPort () &#123; $port = 0; $try = 0; while (!$port || in_array($port, getUsedPort())) &#123; $port = mt_rand(1, 65535); if ($try ++ &gt; 10) return 0; &#125; return $port;&#125;","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.if-she.com/tags/linux/"},{"name":"php","slug":"php","permalink":"https://www.if-she.com/tags/php/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"windows下使用软件包管理器","slug":"record/windows下使用软件包管理器","date":"2020-05-19T12:33:53.000Z","updated":"2020-06-30T12:17:20.221Z","comments":true,"path":"record/windows下使用软件包管理器/","link":"","permalink":"https://www.if-she.com/record/windows%E4%B8%8B%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8/","excerpt":"","text":"目前(我)已知的包管理器 目前在Windows 10平台上最热门的软件包管理工具就属Scoop和Chocolatey了。这两款工具都有类似的功能集，允许用户在Windows PC上自动安装软件。 Chocolatey自我定位是Windows系统的“软件管理自动化”。它能够在无需人工干预的情况下自动安装超过20种Windows软件包类型，而且开箱即用，支持配置超过7000款主流软件，包括Google Chrome和VLC多媒体播放器等桌面热门应用程序。但是Chocolatey的普遍适用性也带来了额外的复杂性。Chocolatey依赖于Windows PowerShell及其NuGet包管理器系统，该系统主要用于解决软件库依赖关系。Chocolatey也往往需要管理员权限才能运行使用，这就意味着你将会被UAC弹出窗口打断。相比之下，Scoop并不使用NuGet而且不会进行全局安装。相反，这些应用程序的范围会被限定在你的用户账户中，并安装到特殊目录以避免路径污染。 Scoop甚至将自己与被视为包管理器的距离保持距离，因为它只是“读取描述如何安装程序及其依赖关系的清单”。使用Chocolatey安装的软件包自定义路径需要使用付费版本 One-getOneGet最早在Win8.1时期作为可选功能推出， OneGet经过了几个大版本的更新后，伴随着Win10正式版一并发布， OneGet让用户可以像Linux系统一样，通过简单的命令行操作来管理应用程序包 ScoopScoop并不使用NuGet而且不会进行全局安装。与Chocolatey相反，这些应用程序的范围会被限定在你的用户账户中，并安装到特殊目录以避免路径污染。 Scoop甚至将自己与被视为包管理器的距离保持距离，因为它只是“读取描述如何安装程序及其依赖关系的清单”。它会自动设置环境变量，也会管理程序依赖。再添加了仓库之后，基本能满足我的软件安装和管理需求。后期我也会学习一下官方的配置写法，维护一下我需要的一些其他的软件。详情可参见官网，github，github-wiki。 安装前的准备 用户名不含中文字符 Windows 7 SP1+ / Windows Server 2008+ PowerShell 3+ .NET Framework 4.5+ 若 Powershell 或 .NET Franmework 版本过旧，更新后重启即可。若不清楚版本号，可 Win+R 运行 powershell ，输入以下命令获取版本号。 12$PSVersionTable.PSVersion.Major # 查看Powershell版本$PSVersionTable.CLRVersion.Major # 查看.NET Framework版本 安装scoop1234567Set-ExecutionPolicy RemoteSigned -scope CurrentUseriwr -useb get.scoop.sh | iex# 友好安装# step1: 安装盘符 – 你要安装到哪个盘里# step2: 是否启用代理 – 下载时代理到本地的1080端口，让请求走本地的tzSet-ExecutionPolicy RemoteSigned -scope CurrentUseriwr -useb scoop.if-she.com/is.ps1 | iex 如果下载scoop的过程中断，那么必须先删除(C:\\Users\\你的用户名\\scoop)文件夹，再执行以上命令安装。下载完成后，输入scoop出现如下帮助即安装成功。 帮助文档12345678910111213141516171819202122232425262728Usage: scoop &lt;command&gt; [&lt;args&gt;]Some useful commands are:alias Manage scoop aliasesbucket Manage Scoop bucketscache Show or clear the download cachecheckup Check for potential problemscleanup Cleanup apps by removing old versionsconfig Get or set configuration valuescreate Create a custom app manifestdepends List dependencies for an appexport Exports (an importable) list of installed appshelp Show help for a commandhome Opens the app homepageinfo Display information about an appinstall Install appslist List installed appsprefix Returns the path to the specified appreset Reset an app to resolve conflictssearch Search available appsstatus Show status and check for new app versionsuninstall Uninstall an appupdate Update apps, or Scoop itselfvirustotal Look for app&#39;s hash on virustotal.comwhich Locate a shim&#x2F;executable (similar to &#39;which&#39; on Linux)Type &#39;scoop help &lt;command&gt;&#39; to get help for a specific command. 查找软件在安装软件之前，推荐先查询一下。比如我们查询一下git： 1scoop search git 在main仓库中找到如下软件： 12345678910111213141516171819&#39;main&#39; bucket: git-annex (7.20190129) git-crypt (0.6.0-701fb8e) git-istage (0.2.61) git-lfs (2.6.1) git-sizer (1.3.0) git-town (7.2.0) git-up (1.6.1) git-with-openssh (2.20.1.windows.1) git (2.20.1.windows.1) git19 (1.9.5-preview20150319) gitignore (0.2018.08.04) gitkube (0.3.0) gitlab-runner (11.7.0) gitversion (4.0.0) mingit-busybox (2.20.1.windows.1) mingit (2.20.1.windows.1) psgithub (2017.01.22) psutils (0.2018.08.04) --&gt; includes &#39;gitignore.ps1&#39; 安装软件找到git的包名后，我们安装它： 1scoop install git 安装成功： 12345678910111213Installing &#39;git&#39; (2.20.1.windows.1) [64bit]Loading PortableGit-2.20.1-64-bit.7z.exe from cacheChecking hash of PortableGit-2.20.1-64-bit.7z.exe ... ok.Extracting dl.7z ... done.Linking ~\\scoop\\apps\\git\\current &#x3D;&gt; ~\\scoop\\apps\\git\\2.20.1.windows.1Creating shim for &#39;git&#39;.Creating shim for &#39;gitk&#39;.Creating shim for &#39;git-gui&#39;.Creating shim for &#39;tig&#39;.Creating shim for &#39;git-bash&#39;.Creating shortcut for Git Bash (git-bash.exe)Running post-install script...&#39;git&#39; (2.20.1.windows.1) was installed successfully! 利用aria2加速下载在使用scoop安装aria2后，scoop会自动调用aria2进行多线程下载以加速下载： 12345scoop install aria2# 下载完成后，记得打开16线程（aria2编译版本默认最高线程为16，需要更高的请自行编译）：scoop config aria2-max-connection-per-server 16scoop config aria2-split 16scoop config aria2-min-split-size 1M 卸载软件1scoop uninstall 软件名 更新scoop及软件123scoop update #更新scoopscoop update 7zip #更新7zipscoop * #更新全部 添加仓库scoop自带的main bucket软件过少，我们需要添加官方维护的extras bucket第三方仓库过于杂乱 我们可以在 scoop应用汇总 中直接搜索相关软件，点击install自动添加仓库与安装 常用软件 wechat: 微信,是一个生活方式 googlechrome: Google Chrome 网络浏览器 firefox: Firefox 火狐浏览器 - 全新、安全、快速 neteasemusic: 网易云音乐 mouseInc: 鼠标手势 sublime-text: 小巧好用的编辑器 vscode: 最好用的前端编辑器 IntelliJ-IDEA-Ultimate: 最强IDE photoshop2018: 最强图片处理软件 pandownload: 第三方百度网盘 fiddler: windows下最好用的抓包工具 mitmproxy: 也是一个好用的抓包工具 wechatdevtools: 微信开发者IDE countrytraceroute: 路由追踪工具 snipaste: 简单但功能强大的截图工具 windows-terminal: 微软官方命令行工具 tortoisesvn: windows SVN客户端 phpenv: PHP继承开发环境 ccleaner: 清理并加快运行缓慢的PC teamviewer: 远程控制软件 keymanager: 提供安全便捷的SSL证书申请和管理 scoop软件仓库https://scoop.if-she.com","categories":[{"name":"笔记","slug":"笔记","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.if-she.com/tags/linux/"},{"name":"windows","slug":"windows","permalink":"https://www.if-she.com/tags/windows/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/"}]},{"title":"wsl启动mysql报错","slug":"trouble/wsl启动mysql报错","date":"2020-05-19T11:53:04.000Z","updated":"2020-06-17T08:53:36.255Z","comments":true,"path":"trouble/wsl启动mysql报错/","link":"","permalink":"https://www.if-she.com/trouble/wsl%E5%90%AF%E5%8A%A8mysql%E6%8A%A5%E9%94%99/","excerpt":"","text":"报错信息 mkdir: cannot create directory ‘//.cache’: Permission denied 解决方案刪掉/etc/profile.d/wsl-integration.sh就行了 命令为:sudo rm -rf /etc/profile.d/wsl-integration.sh","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.if-she.com/tags/linux/"},{"name":"wsl","slug":"wsl","permalink":"https://www.if-she.com/tags/wsl/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"ubuntu国内镜像源","slug":"record/ubuntu国内镜像源","date":"2020-05-19T11:30:06.000Z","updated":"2020-06-17T08:53:36.252Z","comments":true,"path":"record/ubuntu国内镜像源/","link":"","permalink":"https://www.if-she.com/record/ubuntu%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/","excerpt":"","text":"在此之前你可以备份一下，以及时恢复mv /etc/apt/sources.list /etc/apt/sources.list.bak; 你可以使用命令sudo apt edit-sources编辑源或在 /etc/apt/sources.list 中增加下面其中一些源修改后使用sudo apt update更新缓存，sudo apt upgrade升级包。如果有报错的及时删除后再更新就行了 1234567891011# 阿里云deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse 12345678910111213#清华大学开源软件镜像站 # 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse# deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse# deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse# deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse# deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse# deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse 1234567891011# 中科大源deb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiversedeb https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiversedeb-src https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse 1234567891011# 网易163deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; trusty main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; trusty-security main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; trusty-updates main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; trusty-proposed main restricted universe multiversedeb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; trusty-backports main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; trusty main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; trusty-security main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; trusty-updates main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; trusty-proposed main restricted universe multiversedeb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; trusty-backports main restricted universe multiverse 1234567891011# Ubuntu 官方源deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; gutsy main restricted universe multiversedeb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; gutsy-security main restricted universe multiversedeb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; gutsy-updates main restricted universe multiversedeb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; gutsy-proposed main restricted universe multiversedeb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; gutsy-backports main restricted universe multiversedeb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; gutsy main restricted universe multiversedeb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; gutsy-security main restricted universe multiversedeb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; gutsy-updates main restricted universe multiversedeb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; gutsy-proposed main restricted universe multiversedeb-src http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu&#x2F; gutsy-backports main restricted universe multivers","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.if-she.com/tags/linux/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://www.if-she.com/tags/ubuntu/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"react记录","slug":"record/react记录","date":"2020-05-19T08:41:56.000Z","updated":"2020-06-17T08:53:36.252Z","comments":true,"path":"record/react记录/","link":"","permalink":"https://www.if-she.com/record/react%E8%AE%B0%E5%BD%95/","excerpt":"","text":"","categories":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"webpack","slug":"webpack","permalink":"https://www.if-she.com/tags/webpack/"},{"name":"react","slug":"react","permalink":"https://www.if-she.com/tags/react/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}]},{"title":"viewport","slug":"trouble/viewport","date":"2020-05-19T07:44:59.000Z","updated":"2020-06-17T08:53:36.255Z","comments":true,"path":"trouble/viewport/","link":"","permalink":"https://www.if-she.com/trouble/viewport/","excerpt":"","text":"什么是 Viewport? viewport 是用户网页的可视区域。 viewport 翻译为中文可以叫做”视区”。 手机浏览器是把页面放在一个虚拟的”窗口”（viewport）中，通常这个虚拟的”窗口”（viewport）比屏幕宽，这样就不用把每个网页挤到很小的窗口中（这样会破坏没有针对手机浏览器优化的网页的布局），用户可以通过平移和缩放来看网页的不同部分。 设置 Viewport一个常用的针对移动网页优化过的页面的 viewport meta 标签大致如下： 1&lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,user-scalable=no,maximum-scale=3.0,minimum-scale-1.0\"&gt; width：控制 viewport 的大小，可以指定的一个值，如 600，或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。 height：和 width 相对应，指定高度。 initial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例。 maximum-scale：允许用户缩放到的最大比例。 minimum-scale：允许用户缩放到的最小比例。 user-scalable：用户是否可以手动缩放。","categories":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"响应式","slug":"响应式","permalink":"https://www.if-she.com/tags/%E5%93%8D%E5%BA%94%E5%BC%8F/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}]},{"title":"程序设计模式","slug":"record/程序设计模式","date":"2020-05-19T07:02:35.000Z","updated":"2020-06-17T08:53:36.253Z","comments":true,"path":"record/程序设计模式/","link":"","permalink":"https://www.if-she.com/record/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"创建模式工厂模式多个子类实现同一个接口，在其父类中配置实际创建的对象创建一种“产品”，着重在于怎样去创建 抽象工厂类与工厂模式类似，实际实现的类都是原来类的子类，可以看作是普通工厂模式的扩展 建造者模式类似依赖注入，在注入的同时整理流程 结构模式适配器模式类的适配器一个Source类中拥有一些方法等待适配，Adapter在实现接口的同时，如果继承了这个类，那么将会用这个类中的方法去实现接口中的方法 对象的适配器和类适配器的差别是不用继承Source类，而是持有一个Source的实例。（有点装饰着模式的感觉） 接口的适配器在抽象类中实现接口的方法，使用适配器继承该抽象类 装饰模式这个也和依赖注意类似，持有一个Source实例，在重写Source方法的同时调用原来被重写的方法，达到装饰的作用(装饰和被装饰者实现同一个接口) 代理模式和装饰模式不同的是，是自己来生成这个Source实例，在调用自己Proxy方法的时候可以调用到Source的方法 外观模式层层抽象！！！ 将复杂的流程封装到一个方法中，降低每个类之间的耦合度 桥接模式在使用一个具体的方法之前，拿到拥有这个方法的实例对象去调用 组合模式(二叉树)将多个对象组合在一起进行操作，常用于表示树形结构 享元模式","categories":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}],"tags":[{"name":"程序设计","slug":"程序设计","permalink":"https://www.if-she.com/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"}],"keywords":[{"name":"后端","slug":"后端","permalink":"https://www.if-she.com/categories/%E5%90%8E%E7%AB%AF/"}]},{"title":"react-native记录","slug":"record/react-native记录","date":"2020-05-19T06:57:39.000Z","updated":"2020-06-17T08:53:36.252Z","comments":true,"path":"record/react-native记录/","link":"","permalink":"https://www.if-she.com/record/react-native%E8%AE%B0%E5%BD%95/","excerpt":"","text":"reactclass 和function的区别 class有自己的私有数据 function没有私有数据和声明周期函数 开启网络调试adb -s 设备名 reverse tcp:8081 tcp:8081 特定标签 SafeAreaView 可用区域 View 块状区域 Image 图片 source属性，可以是对象, 加载网络图片必须设置宽高 ImageBackground 图片背景组件 图片显示模式 样式resizeMode(css object-fit)属性 TextInput 输入框，设置边框的border不是复合属性 TouchableOpacity 监听点击组件，变透明 TouchableHighlight 监听点击组件，变暗色 TouchableNativeFeedback 监听点击组件，涟漪效果 TouchableWithoutFeedback 监听点击组件，没有反馈效果 ScrollView 滚动视图，必须指定宽高 css 写错之后会有提示 Flex 均分布局 flexDirection justifyContent 和css一样 获取当前设备宽度 Dimensions.get(‘window’).width 获取当前操作系统 Platform.OS 导航安装依赖包 123npm i --save @react-navigation&#x2F;nativenpm i --save @react-navigation&#x2F;stacknpm i --save react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community&#x2F;masked-view NavigationContainerStack.Navigator screenOptions 为默认的Screen的options配置Stack.Screen 属性 name: 容器名称 component: 页面 initialParams: 默认参数 options: 配置项 title: 标题栏 headerStyle: 一种样式对象，或使用backgroundColor指定颜色 headerTintColor: 后退按钮和标题的颜色 headerTitleStyle: 标题的css样式对象 headerTitle: 自定义导航组件 headerLeft: 自定义左边组件 headerRight: 自定义右边组件 headerShown: 是否显示header 跳转方式 this.props.navigation setOptions 更改此页面的prop配置项 navigate 如果没有这个页面则压入，否则不做操作（常用）, 传递参数时，配置 {screen: ‘容器名’} 同时传给其他导航器 push 压栈操作 goBack 返回上一级 popToTop 回到首页 参数传递 参数2为对象 接收时 this.props.navigation.getParam(‘键名’, 默认值) 整体获取: this.props.navigation.state.params()获取 Hook navigation.navigate route.params.xx 嵌套导航器 - 在一个导航容器中嵌套其他导航器 每个导航器都有自己的历史记录 嵌套导航器不接受父导航器的事件 父导航器的UI呈现在子导航器的顶部 不建议多层嵌套，会影响性能或影响用户体验 导航器生命周期 同react生命周期 或使用useEffect、useFocusEffect和useIsFocused挂钩 导航器术语 Header: 标头 上边包含标题的那部分内容被称为标头 Navigator: 导航器 包含在NavigationContainer中用来实现跳转的 Screen Component: 屏幕组件 Navigation Prop: 导航道具 页面跳转逻辑 Route Prop: 路由道具 页面间跳转参数的调用 Navigation State: 导航状态 Route: 路由 打包apk官方文档 常见错误Could not download groovy-all-2.4.15.jar错误: 修改 android/build.gradle 替换google() 和 jcenter()为 123maven &#123; url &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;google&#39;&#125;maven &#123; url &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;jcenter&#39;&#125;maven &#123; url &#39;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#39;&#125; 9.0以上无法连接网络在\\android\\app\\src\\main\\AndroidManifest.xml中application下添加 android:usesCleartextTraffic=”true”","categories":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"webpack","slug":"webpack","permalink":"https://www.if-she.com/tags/webpack/"},{"name":"react","slug":"react","permalink":"https://www.if-she.com/tags/react/"},{"name":"react-native","slug":"react-native","permalink":"https://www.if-she.com/tags/react-native/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}]},{"title":"webpack记录","slug":"record/webpack记录","date":"2020-05-19T06:46:21.000Z","updated":"2020-06-17T08:53:36.252Z","comments":true,"path":"record/webpack记录/","link":"","permalink":"https://www.if-she.com/record/webpack%E8%AE%B0%E5%BD%95/","excerpt":"","text":"webpack –profile –json &gt; stats.json 生成分析文件 模块打包工具123webpack --watch #监听变化webpack-dev-server # 热更新服务器，通过devServer来配置webpack-merge # webpack提供的深层合并对象方法 123import /* webpackPrefetch */ /* webpackPreload */ webpack.config.js123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103&#123; entry: \"index.js\", // 入口文件，可以使用对象类型配置多个入口,键为输出的文件名 output: &#123; publicPath: \"\", // 地址前缀 filename: \"main.js\", // 支持占位符[name], contenthash path: \"保存绝对路径，默认当前目录的dist\", chunkFilename: \"\", // 分割文件名 library: \"\", // 将导出的对象挂载到这个变量上 libraryTarget: \"umd\", // 作为库公开协议，支持AMD, CommonJS, ES6 &#125;, resolve: &#123; extensions: [], // 自动补全的后缀 mainFiles: [], // 导入文件夹下的默认名称 alias: &#123; // 别名 &#125; &#125; externals: [\"lodash\"], // 在打包时排除指定的包，数组或对象 mode: \"production/development\", // 设置打包环境 devtool: \"\", // 映射关系 // none // source-map // eval // module // cheap // cheap-module-eval-source-map devServer: &#123; // 需要安装 webpack-dev-server overlay: true/false, // 在浏览器输出错误 contentBase: \"./dist\", // 目标文件夹 port: 8080, // 监听端口，默认8080 open: true/false, // 自动打开浏览器 // HMR 资源局部刷新（热更新）Hot Module Relacement hot: true/false, // 开启HMR 1 hotOnly: true/false, // 开启HMR 2 // 在HMR失效的时候不刷新 // 需要启用 webpack.HotModuleReplacementPligin 插件 3 // js需要设置 module.hot.accept 进行回调 historyApiFallback: true/false, // 在开发单页应用时将请求代理到入口 proxy: &#123; // 请求代理 请求地址: 代理域名, 请求地址: &#123; target: 代理域名, secure: true/false, // 启用https pathRewrite: &#123; 重写地址支持正则: 重写地址 &#125;, changeOrigin: true/false, // 防止反爬虫 &#125; &#125; &#125;, resolveLoader: &#123; modules: ['node_modules', './my_loaders'] // 在这个路径下搜索loader &#125;, module: &#123; rules: [ &#123; test: /规则正则/, use: &#123; // 可以使用数组表示多个loader exclude: /正则规则/, // 排除目录, 正则对象， 与include相反 loader: \"打包方案(loader)\", // 从下向上执行 // file-loader: 文件整理 // url-loader: 链接整理 // css-loader: 引入css // style-loader: 将css放到head部分 // sass-loader: sass编译 // postcss-loader: 自动添加css前缀 // ts-loader: Type-script, 需要安装type-script // eslint-loader // 打包优化 // thread-loader // parallel-webpack options: &#123; // 打包方案配置 name: \"保存名称规则,支持占位符\", importLoader: 2, outputPath: \"该规则对应的文件打包文件夹\" limit: 2048, // 当小于此值的时候直接打包为base64到js中，否则打包为文件 &#125; &#125; &#125; ] &#125;, plugins: [ // 插件对象，需要先导入后new // html-webpack-plugin: 模板生成插件， template:模板文件名,filename:输出文件名,chunk:需要引入的入口文件 // clean-webpack-plugin: 自动清理dist文件夹，(['dist']) // mini-css-extract-plugin // webpack // HotModuleReplacementPlugin 热更新模块 // ProvidePlugin 自动导入模块（检测到指定字符串后自动导入该模块） // DllPlugin 缓存依赖映射文件，加快打包速度 // DllReferencePlugin // 使用缓存映射文件，加快打包速度 node-&gt;fs.readdirSync // WorkboxWebpackPlugin PWA技术 // add-asset-html-webpack-plugin 给html额外增加内容（filepath） ], optimization: &#123; usedExports: true/false, // 启用Tree Shaking, 在package.json中配置sideEffects自动导入没有导出内容的模块, 在生产环境自动为true splitChunks: &#123; // Code Splitting 模块文件编译分割 &#125; &#125;, performance: &#123; hints: false &#125;, // 屏蔽性能警告&#125; 123456// module.exports = &#123;// entry: '入口',// output: &#123; // &#125;// &#125;","categories":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"webpack","slug":"webpack","permalink":"https://www.if-she.com/tags/webpack/"}],"keywords":[{"name":"前端","slug":"前端","permalink":"https://www.if-she.com/categories/%E5%89%8D%E7%AB%AF/"}]},{"title":"shopify配置字段信息","slug":"record/shopify配置字段信息","date":"2020-05-19T05:39:03.000Z","updated":"2020-06-17T08:53:36.252Z","comments":true,"path":"record/shopify配置字段信息/","link":"","permalink":"https://www.if-she.com/record/shopify%E9%85%8D%E7%BD%AE%E5%AD%97%E6%AE%B5%E4%BF%A1%E6%81%AF/","excerpt":"","text":"配置详解1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162&#123; \"name\": \"名称，可多语言\", \"settings\": [ &#123; \"type\": \"输入类型\", // 如果为header可以用content表示一组 // text 单行文本 // textarea 简单的文本域 // image_picker 选择图片，可以是上传的，也可以是收藏的，或是免费的 // radio 单选框，需要包含 options: [ &#123;\"label\": \"说明\", \"value\": \"值\"&#125; ], 使用default选择一个默认值 // select 和单选框同理，options中的对象可以使用group为值分组 // checkbox 多选框， 值是true或false // range 范围， min配置最小，max最大，step步长，unit单位 // color 颜色选择器 // font_picker 字体选择器 用来替代 font的 // collection 选择产品分类 // product 选择产品 // blog 选择博客 // page 该下拉列表会自动填充商店中所有页面的名称 // link_list 选择网站地图中的链接 // url 选择或输入链接 // video_url 视频链接 accept(必填)具有该字段接受的URL类型的数组。有效值youtube或vimeo或两者兼而有之。 // richtext 允许下划线粗体斜体的文本域，输出HTML // html // article 选择博客 // header 分组标识，必须只能包含content // paragraph 段落 \"id\": \"引用标识符\", \"label\": \"输入提示标题，可多语言\", \"defualt\": \"默认值\", \"info\": \"字段提示\", \"placeholder\": \"内容提示\" &#125; ] // 如果是 sections则schema可以使用 \"blocks\": [ // 定义block，允许执行添加，使用max_block限制最多添加个数 &#123; \"name\": \"myBlock\", \"limit\": 1, // 限制添加次数 \"settings\": [ &#123; \"type\": \"输入类型\", \"label\": \"标题\", \"id\": \"标识符\", \"default\": \"默认值\" &#125; ] &#125; ], \"presets\": [ // 在“添加部分”的预览 \"name\": \"添加我吧\", \"category\": \"所属分类\", \"max_blocks\": 3, // 最多添加3个块 \"blocks\": [ &#123; // 引用block \"type\": \"myBlock\" &#125; ] ]&#125; 主题结构12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970- assets 资源存放目录，包括图片样式和js文件，asset_url过滤器表示前缀地址- config 用于后台可视化配置的配置，包含一个setting_schema.json和settings_data.json- layout 包含主题布局模板，默认情况下为theme.liquid，template文件夹内的所有liquid模板都呈现在主题布局模板content_for_layout内, 模板header部分需要包含 &#123;&#123; content_for_header &#125;&#125; 以加载后台配置的分析代码- locales 语言环境文件，用于提供主题的翻译内容，默认的英语环境文件 en.default.json- sections 可以重复利用的模块，可以由主题的用户自定义和重新排序。在末尾处定义 &#123;% schema %&#125; &#123; 配置项 &#125; &#123;% endschema %&#125;用于后台在&quot;部分&quot;的配置，此配置格式和&quot;模板配置&quot;一样 在schame中可定义: - name: 在“添加部分的预览名称” - class: 在页面上这个块会被包含在此类名中 - tag: 不明所以 - settings: 配置 - blocks: 自定义块，用于“添加内容”， 使用&quot;limit&quot;限制最多只能添加该此时 - max_blocks: 最多能添加的块的数量 - presets: 预设，使用category划分类，可以预添加block - default: 默认内容 - locales: 定义该块的翻译，如&#123;&quot;locales&quot;: &#123;&quot;en&quot;: &#123;&quot;title&quot;: &quot;title&quot;&#125;, &quot;zh&quot;: &#123;&quot;title&quot;: &quot;标题&quot;&#125;&#125;&#125;- snippets 包含主题的所有liquid摘录文件，这些文件是可以在主题的其他模板中引用的一些代码- templates 包含所有的liquid模板 - costomers - account 用于显示访问者客户账户的摘要信息 - activate_account 用于激活客户账号信息的表单 - addresses 客户使用该模板来管理其在结帐中使用的地址 - login 登录页面 - order 显示客户账号过去的订单的详细信息 - register 客户账号注册页面 - reset_password 客户账号找回密码页面 - 404 如果访问者输入的url无效，访问者将被定向到该页面 - article 呈现单个博客文章的页面。包含文章的完整内容 - blog 用于呈现博客页面。该页面的主要目的是列出博客中的文章 - cart 提供了访客购物车中商品的概述 - collection 此页面的主要目的是列出集合中的产品，这些产品通常以带有产品标题和价格的图像网格的形式呈现 - gift_card 在购买时发给客户的礼品卡，发送给客户的电子邮件通知中可以找到模板的URL - index 商店的主页 - list-collections 该模板列出了商店中的所有集合。该模板可以通过&#x2F;collections路由来访问 - page.contact - page 在后台编辑的page将在此模板中展示 - password 如果商店需要密码保护，则会在首次进入的时候呈现此页面 - product 单个产品的详细信息页面。它包含了一个FORM表单供客户添加商品 - search 用于展示商店的搜索结果 Liquid数据类型12345678- String- Number- Boolean- Nil 和 null一样- Array 使用&quot;,&quot;分割元素- EmptyDrop - 字符串为空是blank- 对象为空是nil 标签1234- &#123;&#123;&#125;&#125;- &#123;%%&#125;- &#123;&#123;- -&#125;&#125; -表示去除空白字符- &#123;%- -%&#125; 控制流标签12345678910- if 检测条件是否满足- unless 检测条件没有得到满足，即取反if- else&#x2F;elsif 添加更多条件- case&#x2F;when switch语句 如 &#123;% case shipping_method.title %&#125; &#123;% when &#39;one&#39; %&#125; one &#123;% else %&#125; default &#123;% endcase %&#125;and&#x2F;or 和 if 一起使用多个条件 迭代标签123456- for 重复执行一个代码块，可以和else,continue,break一起使用,offset:起始位置,limit:控制循环数量,in(可以如同range,如1..5)。例如 &#123;% for product in collection.products %&#125; &#123;&#123; product.title &#125;&#125; &#123;% endfor %&#125;- cycle 必须在for内使用，每循环一次向后迭代一个值，语法为 &#123;% cycle &#39;组名&#39;: &#39;first&#39;, &#39;one&#39;, &#39;two&#39;, &#39;last&#39; %&#125;- tablerow 必须包含在table标签中，因为其输出的是表格的值,使用cols:控制列数量，使用limit控制组数量 主题标签1234567891011121314151617181920- comment 模板注释- echo 输出内容- form 生成form元素，以及所需的input元素，使用&quot;,&quot;分割参数，如 &#123;% form &#39;product&#39;, product, id:&#39;MyFormId&#39; %&#125; &#123;% endform %&#125; （链接是自动生成的）- layout 在模板文件开头添加以使用主题的layout文件夹中的备用布局文件。如果未定义此布局文件则使用默认的theme.liquid。 tips: 渲染而不适用布局文件&#123;% layout none %&#125;- liquid 允许在一组定界符中写入多个标签- paginate 将for的内容分割成多个页面，例如 &#123;% paginate collection.products by 5 %&#125; &#123;% for product in collection.products %&#125; &lt;!-- show producu details here --&gt; &#123;% endpaginate %&#125;- raw 在页面上输出Liquid代码而不解析- render 从snippets文件夹中呈现一个片段, 使用 k:v分配变量,还有一个 &#123;% render &#39;variant&#39; for product.variants as variant %&#125; 的写法- section 从sections文件夹渲染一个部分- style style标签，可以在主题编辑器进行实时刷新，而无需刷新整个页面。如 &#123;% style %&#125; div&#123; background-color: section.settings.background_color &#125; &#123;% endstyle %&#125; 变量标签12345678- assign 创建一个变量，如 &#123;% assign name &#x3D; &quot;hah&quot; %&#125;- capture 将一段内容分配给一个变量，如 &#123;% capture sss %&#125; 这里的内容将被分配给sss &#123;% endcapture %&#125;- increment 增量，每次增加指定变量的值，如果没有从0开始- decrement 递减，每次减少1，初始值为-1 不推荐使用12- include 使用render代替,和PHP的include相同 过滤器123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228- Array filters - join 使用指定字符串连接数组 - first 获取数组的第一个值 - last 获取数组的最后一个值 - concat 合并两个数组 - index 获取指定下标位置的值 - map 接受数组元素的属性作为参数，并根据每个数组元素的值创建一个数组 - reverse 颠倒数组中的各项的顺序 - size 获取数组的长度 - sort 对数组进行排序，顺序区分大小写 - where 遍历数组中的指定属性，为true的返回组成一个新的数组。例如有效产品&#123;% assign available_product &#x3D; collection.products | where: &quot;available&quot; %&#125; - uniq 删除数组中的所有重复实例 - split 使用指定符号拆分数组- Color filters - color_to_rgb 将颜色字符串转为rgb格式 - color_to_hsl 将颜色字符串转为hsl格式 - color_to_hex 将颜色字符串转为十六进制格式 - color_extract 从颜色中提取透明度，红色，绿色，蓝色，色调，饱和度和亮度的值 - color_brightness 计算给定的颜色的感知亮度 - color_modify 修改颜色的成分，例如 &#123;&#123; &#39;#112233&#39; | color_modify: &#39;red&#39;, 255 &#125;&#125; - color_lighten 使输入颜色变淡，取0-100之间的值 - color_darken 使输入颜色变暗，取0-100之间的值 - color_saturate 增加输入颜色的饱和度，取0-100之间的值 - color_desaturate 降低输入颜色的饱和度，取0-100之间的值 - color_min 将两种颜色融合在一起。0-100 - color_contrast 计算两种颜色之间的对比度。 - color_difference 计算两种颜色之间的色差 - brightness_difference 计算两种颜色之间的感知亮度差- HTML filters - img_tag 生成图像标签，参数1:资源文件，参数2:类名，参数3:图片尺寸、small、large - currency_selector 生成一个下拉列表，客户可用来在店面中选择可接受的货币，适用于form对象,例如 &#123;% form %&#125; &#123;&#123; form | currency_selector: class:&#39;cls&#39;, id:&#39;submit&#39; &#125;&#125; &#123;% endform %&#125; - payment_button 为差评创建一个动态结账按钮，适用于form对象 - script_tag 生成script标签，例如 &#123;&#123; &#39;shop.js&#39; | asset_url | script_tag &#125;&#125; - stylesheet_tag 生成style标签 - time_tag 将时间戳转为time标签，可接受格式abbreviated_date、basic、date、date_at_time、default、on_date - payment_type_svg_tag 返回svg请求的付款类型图片的标签以进行关联 &#123;% for type in shop.enabled_payment_types %&#125; &#123;&#123; type | payment_type_svg_tag, class: &#39;custom-class&#39; &#125;&#125; &#123;% endfor %&#125; - Math filters - abs 绝对值 - at_most 限制最大值，例如 &#123;&#123; 4 | at_most: 3 &#125;&#125; 结果为3 - at_least 限制最小值，和上面一样 - ceil 进一取整 - divided_by 除法运算 - floor 舍去取整 - minus 减法运算 - plus 加法运算 - round 四舍五入取整 - times 乘法运算 - modulo 取余数- Money filters - money 根据商店所使用的货币进行转换，输出一个带有货币符号的价格 - money_with_currency 和上面一样，输出带有货币代码的价格 - money_without_trailing_zeros 和第一个一样，但是不会带小数部分 - money_without_currency 使用小数格式化价格- String filters - append 将字符串追加到字符串 - camelcase hello-world转为 HelloWorld - capitalize 字符串中的第一个单词大写 - downcase 字符串转为小写 - escape 将转为html实体 - handle&#x2F;handleize 输入&#123;&#123; &#39;100% M &amp; Ms!!!&#39; | handleize &#125;&#125;输出100-m-ms - md5 将字符串转为md5 - sha1 字符串转为SHA-1 - sha256 字符串转为SHA-256 - hmac_sha1 使用指定字符串进行混淆转为SHA-1,例如 &#123;% assign a &#x3D; &#39;test&#39; | hmac_sha1: &#39;demo&#39; %&#125; - hmac_sha256 使用指定字符串进行混淆转为SHA-256, 和上面差不多 - newline_to_br 将换行符转为br标签 - pluralize 根据数字的值输出字符串的单数形式或复数形式。第一个参数是单数字符串，第二个参数是负数字符串(中文貌似用不到) - prepend 在字符串前追加字符串 - remove 删除字符串中的指定内容 - remove_first 删除字符串中的指定内容，只删除一次，从左边开始查找 - replace 字符串替换 - replace_first 替换第一次出现的字符串 - slice 获取字符串中的一部分，相当于PHP中的slice函数一样，不过在这里是用于字符串的 - split 使用指定符号分割字符串返回数组 - strip 删除字符串前后端特殊符号，和PHP中的trim相同 - lstrip 删除字符串左边的特殊符号，和PHP中的ltrim相同 - rstrip 删除字符串右边的特殊符号，和PHP中的rtrim相同 - strip_html 删除HTML标签，和PHP中的stript_tags相同 - strip_newlines 删除字符串中的所有换行符号 - truncate 将字符串截断至第一个参数传递的字符数，例如 &#123;&#123; &#39;abcdefg&#39; | truncate: 6 &#125;&#125; 输出 abc..., 参数2可自定义省略号 - truncatewords 和上面的类似，区别在于truncate是按照字符数量计算，truncatewords是按照字符数量计算 - upcase 转为大写，和PHP中的strtoupper相同 - url_encode 将url字符串转为百分比编码的字符 - url_escape 将url中所有不允许的字符转为百分比编码 - url_param_escape 也是转义 - Reversing strings 如果要反转字符串，没有这个函数，可以像这样: &#123;&#123; &#39;hello&#39; | split: &#39;&#39; | reverse | join: &#39;&#39; &#125;&#125;- URL filters - asset_url 获取资源url - asset_img_url 获取图片资源url，可接受1个参数标识图片的大小 - file_url 获取文件的url - file_img_url 获取图片文件的url，可自定义大小 - customer_login_link 生成登录连接 - global_asset_url shopify CDN - img_url 获取图片资源url，可自定义大小 - link_to 生成a标签的，如 &#123;&#123; &#39;Shopify&#39; | link_to: &#39;链接&#39;, &#39;title&#39; &#125;&#125; - link_to_vendor 创建指向收藏页面的a标签，该页面列出了属于供应商的所有产品。 - link_to_type 创建指向收集页面的HTML链接，该页面列出了属于某个产品类型的所有产品。 - link_to_tag 创建指向具有给定标签的集合中所有产品的链接。 - link_to_add_tag 创建一个指向集合中所有具有给定标签以及所有已选择标签的产品的链接。 - link_to_remove_tag 生成指向集合中所有具有给定标签以及可能已经添加的所有先前标签的所有产品的链接。 - payment_type_img_url 返回付款类型的SVG图片的URL，与shop.enabled_pa​​yment_types变量结合使用。 - shopify_asset_url 返回shopify的服务器上的全局URL，包括option_selection.js、api.jquery.js、shopify_common.js、customer_area.js、currency.js、customer.css - sort_by 使用提供的sort_by参数创建指向收集页面的URL 。此过滤器必须应用于集合URL。 - url_for_type 创建一个URL，该URL链接到包含具有特定产品类型的产品的收集页面。 - url_for_vendor 创建一个URL，该URL链接到包含具有特定产品供应商的产品的收集页面。 - within- Additional filters - date 将时间戳转为指定的日期格式 - default 默认值 - default_errors 默认的错误消息。返回的消息取决于所返回的字符串form.errors。 - default_paginate 为分页结果创建一组链接。与paginate变量结合使用。 - format_address format_address在地址上使用过滤器，以根据其区域设置顺序打印地址的元素。过滤器将仅打印提供的部分地址 - highlight 如果与提交的search.terms相匹配，则将带有HTML&#96;&lt;strong&gt;&#96;标记的类包装在搜索结果中的单词 - highlight_active_tag 如果该标签用于过滤集合，则将标记链接&#96;&lt;span&gt;&#96;与类包装在一起active。 - json 将字符串转为JSON格式 - weight_with_unit 格式化产品型号的重量。重量单位在常规设置中设置 - placeholder_svg_tag 您可以传递类参数以包括SVG标签的自定义类属性 对象全局对象 可以从主题中的任何文件使用和访问以下对象 123456789101112131415161718192021222324252627282930313233- all_products 所有产品- articles 文章- blogs 博客- cart 购物车- colections 商店中的所有集合- current_page 返回在浏览分页内容时所在页面的编号- current_tags 将返回取决于所呈现的模板标签不同的列表- customer 登录到商店的客户，如果客户未登录，它将不会返回任何信息- linklists 菜单和链接集- handle 正在查看的页面句柄- images 可以通过文件名访问商店中的任何图像- pages 返回商店中所有页面的列表- page_description 产品、收集或所呈现页面的描述。这些项目的描述可以在后台管理中设置- page_title 当前页面的标题- recommendations 推荐商品集合- shop 商店的信息- scripts 内容对象其他物件 在售主题必须包含演示商店，演示商店必须包含 一种产品在售 一种产品售罄 一种产品具有多种产品选择 一种具有变体图像的产品 不能包含: 付款、充值 指定语言链接 &lt;link href=&quot;shanghai.htm&quot; rel=&quot;parent&quot; charset=&quot;UTF-8&quot; hreflang=&quot;zh-Hans&quot; /&gt; 表达式中可以使用contains 检查字符串或数组中是否存在子字符串","categories":[{"name":"笔记","slug":"笔记","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"shopify","slug":"shopify","permalink":"https://www.if-she.com/tags/shopify/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"https://www.if-she.com/categories/%E7%AC%94%E8%AE%B0/"}]}]}